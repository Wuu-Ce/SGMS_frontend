{"resolvedId":"D:/Web/gms_forntend/mock/test.ts","transforms":[{"name":"__load__","result":"import { MockMethod } from 'vite-plugin-mock'\r\nexport default [\r\n\t{\r\n\t\turl: '/api/get',\r\n\t\tmethod: 'get',\r\n\t\tresponse: () => {\r\n\t\t\treturn {\r\n\t\t\t\tcode: 0,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tname: 'vben',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\turl: '/api/post',\r\n\t\tmethod: 'post',\r\n\t\ttimeout: 2000,\r\n\t\tresponse: {\r\n\t\t\tcode: 0,\r\n\t\t\tdata: {\r\n\t\t\t\tname: 'vben',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\turl: '/api/text',\r\n\t\tmethod: 'post',\r\n\t\trawResponse: async (req, res) => {\r\n\t\t\tlet reqbody = ''\r\n\t\t\tawait new Promise((resolve) => {\r\n\t\t\t\treq.on('data', (chunk) => {\r\n\t\t\t\t\treqbody += chunk\r\n\t\t\t\t})\r\n\t\t\t\treq.on('end', () => resolve(undefined))\r\n\t\t\t})\r\n\t\t\tres.setHeader('Content-Type', 'text/plain')\r\n\t\t\tres.statusCode = 200\r\n\t\t\tres.end(`hello, ${reqbody}`)\r\n\t\t},\r\n\t},\r\n] as MockMethod[]\r\n","start":1663662531722,"end":1663662531722},{"name":"vite:esbuild","result":"export default [\n  {\n    url: \"/api/get\",\n    method: \"get\",\n    response: () => {\n      return {\n        code: 0,\n        data: {\n          name: \"vben\"\n        }\n      };\n    }\n  },\n  {\n    url: \"/api/post\",\n    method: \"post\",\n    timeout: 2e3,\n    response: {\n      code: 0,\n      data: {\n        name: \"vben\"\n      }\n    }\n  },\n  {\n    url: \"/api/text\",\n    method: \"post\",\n    rawResponse: async (req, res) => {\n      let reqbody = \"\";\n      await new Promise((resolve) => {\n        req.on(\"data\", (chunk) => {\n          reqbody += chunk;\n        });\n        req.on(\"end\", () => resolve(void 0));\n      });\n      res.setHeader(\"Content-Type\", \"text/plain\");\n      res.statusCode = 200;\n      res.end(`hello, ${reqbody}`);\n    }\n  }\n];\n","start":1663662531722,"end":1663662531744,"order":"normal"},{"name":"vite-plugin-use-modules","result":"export default [\n  {\n    url: \"/api/get\",\n    method: \"get\",\n    response: () => {\n      return {\n        code: 0,\n        data: {\n          name: \"vben\"\n        }\n      };\n    }\n  },\n  {\n    url: \"/api/post\",\n    method: \"post\",\n    timeout: 2e3,\n    response: {\n      code: 0,\n      data: {\n        name: \"vben\"\n      }\n    }\n  },\n  {\n    url: \"/api/text\",\n    method: \"post\",\n    rawResponse: async (req, res) => {\n      let reqbody = \"\";\n      await new Promise((resolve) => {\n        req.on(\"data\", (chunk) => {\n          reqbody += chunk;\n        });\n        req.on(\"end\", () => resolve(void 0));\n      });\n      res.setHeader(\"Content-Type\", \"text/plain\");\n      res.statusCode = 200;\n      res.end(`hello, ${reqbody}`);\n    }\n  }\n];\n","start":1663662531746,"end":1663662531746,"order":"normal"},{"name":"vite:import-analysis","result":"export default [\n  {\n    url: \"/api/get\",\n    method: \"get\",\n    response: () => {\n      return {\n        code: 0,\n        data: {\n          name: \"vben\"\n        }\n      };\n    }\n  },\n  {\n    url: \"/api/post\",\n    method: \"post\",\n    timeout: 2e3,\n    response: {\n      code: 0,\n      data: {\n        name: \"vben\"\n      }\n    }\n  },\n  {\n    url: \"/api/text\",\n    method: \"post\",\n    rawResponse: async (req, res) => {\n      let reqbody = \"\";\n      await new Promise((resolve) => {\n        req.on(\"data\", (chunk) => {\n          reqbody += chunk;\n        });\n        req.on(\"end\", () => resolve(void 0));\n      });\n      res.setHeader(\"Content-Type\", \"text/plain\");\n      res.statusCode = 200;\n      res.end(`hello, ${reqbody}`);\n    }\n  }\n];\n","start":1663662531747,"end":1663662531747,"order":"normal"}]}
